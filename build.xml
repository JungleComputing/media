<project name="Ibis-Media" default="build" basedir=".">

    <property name="version" value="-0.4" />

    <property name="jar" value="ibis-media${version}.jar" />

    <property name="quicktime-jar" value="ibis-media-quicktime${version}.jar" />

    <path id="default.classpath">
        <fileset dir="external">
            <include name="*.jar" />
        </fileset>
        <fileset dir="jars">
            <include name="*.jar" />
        </fileset>
    </path>


    <property file="build-includes/${os.name}-${os.arch}.properties" />

    <!-- Internal target - Preparations for building. -->
    <target name="prepare">
        <mkdir dir="jars" />
        <mkdir dir="build" />
        <mkdir dir="build/headers" />
    </target>


    <!-- build quicktime jar. Called by OSX "native" compiler command -->
    <target name="build-quicktime">
        <delete failonerror="false" file="${quicktime-jar}" />
        <delete failonerror="false" dir="build-quicktime" />

        <mkdir dir="build-quicktime" />

        <javac classpathref="default.classpath"
               destdir="build-quicktime"
               srcdir="src"
               debug="true"
               target="1.5"
               includes="ibis/media/video/devices/quicktime/*.java"
        />


        <jar jarfile="${quicktime-jar}" basedir="build-quicktime" includes="**">
            <manifest>
                <attribute name="Built-By" value="${user.name}" />
            </manifest>
        </jar>
        
        <delete failonerror="false" dir="build-quicktime" />
    </target>

    <target name="compile" depends="prepare">
        <javac classpathref="default.classpath"
               destdir="build"
               srcdir="src"
               debug="true"
               target="1.5"
               includes="**/*.java"
               excludes="ibis/media/video/devices/quicktime/*.java"
        />
    </target>

    <target name="build-native-headers" depends="compile">
        <javah classpath="build"
               destdir="build/headers"
               force="yes"
               class="ibis.media.video.devices.video4linux.Video4LinuxDevice,
                       ibis.media.video.devices.video4linux.Video4LinuxDiscovery,
                       ibis.media.video.devices.directshow.DirectShowDevice,
                       ibis.media.video.devices.directshow.DirectShowDiscovery"
        />
    </target>

    <target name="build-native" depends="build-native-headers">

        <echo message="Using native compile command: ${native.compiler} ${native.compiler.options} ${native.compiler.includes} ${native.compiler.input} ${native.compiler.output}"
        />

        <exec executable="${native.compiler}">

            <arg line="${native.compiler.options} ${native.compiler.includes} ${native.compiler.input} ${native.compiler.output}"
            />
        </exec>

        <delete failonerror="false" verbose="true">
            <fileset dir="." includes="*.lib,*.exp" />
        </delete>
    </target>


    <!-- Internal target - Builds the JAR file -->
    <target name="jar" depends="compile">

        <delete failonerror="false" file="jars/${jar}" />

        <jar jarfile="jars/${jar}" basedir="build" includes="**">
            <manifest>
                <attribute name="Built-By" value="${user.name}" />
            </manifest>
        </jar>

    </target>

    <target name="show">
        <echo message="OS name   : ${os.name}" />
        <echo message="OS arch   : ${os.arch}" />
        <echo message="jdk home  : ${jdk.home}" />
        <echo message="version   : Ibis-Media-${version}" />
    </target>

    <target name="build" depends="show,clean,prepare,compile,build-native,jar">
    </target>

    <!-- remove all generated code -->
    <target name="clean" description="Removes the ${distdir} directory">
        <delete failonerror="false" dir="build" />
        <delete failonerror="false" dir="jars" />
        <delete failonerror="false" verbose="true">
            <fileset dir="." includes="*.lib,*.exp" />
        </delete>
    </target>

    <target name="distclean" depends="clean">
        <delete failonerror="false" dir="./build-eclipse" />
        <delete failonerror="false" file="${version}.zip" />
    </target>

</project>
